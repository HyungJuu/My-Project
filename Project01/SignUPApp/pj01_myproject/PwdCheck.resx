<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pAAAAABJRU5ErkJggg==
</value>
  </data>
</root>